name: CD

on:
  workflow_run:
    workflows: ["CI"]
    types:
      - completed
    branches: [main]

jobs:
  check-migrations:
    runs-on: ubuntu-latest
    if: ${{ github.event.workflow_run.conclusion == 'success' }}
    outputs:
      migration-needed: ${{ steps.changes.outputs.migrations }}
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 2

      - name: Check for migration changes
        id: changes
        run: |
          if git diff --name-only HEAD~1 HEAD | grep -E '^supabase/migrations/.*\.sql$'; then
            echo "migrations=true" >> $GITHUB_OUTPUT
            echo "Migration files changed, migration needed"
          else
            echo "migrations=false" >> $GITHUB_OUTPUT
            echo "No migration files changed, skipping migration"
          fi

  migrate-database:
    runs-on: ubuntu-latest
    needs: [check-migrations]
    if: ${{ needs.check-migrations.outputs.migration-needed == 'true' }}
    outputs:
      migration-success: ${{ steps.migrate.outcome }}
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '22'
          cache: 'npm'

      - name: Install dependencies
        run: npm ci

      - name: Run database migration
        id: migrate
        run: npm run migrate
        env:
          DATABASE_URL: ${{ secrets.PROD_DATABASE_URL }}

      - name: Notify migration completion
        if: success()
        run: echo "Database migration completed successfully"

  deploy-production:
    runs-on: ubuntu-latest
    needs: [check-migrations, migrate-database]
    if: ${{ always() && (needs.check-migrations.outputs.migration-needed == 'false' || needs.migrate-database.outputs.migration-success == 'success') }}
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '22'
          cache: 'npm'

      - name: Install dependencies
        run: npm ci

      - name: Create .env.production
        run: |
          echo "NEXT_PUBLIC_SUPABASE_URL=${{ secrets.PROD_SUPABASE_URL }}" > .env.production
          echo "NEXT_PUBLIC_SUPABASE_ANON_KEY=${{ secrets.PROD_SUPABASE_ANON_KEY }}" >> .env.production
          echo "NEXT_PUBLIC_APP_URL=${{ secrets.PROD_APP_URL }}" >> .env.production
          echo "DATABASE_URL=${{ secrets.PROD_DATABASE_URL }}" >> .env.production
          echo "NODE_ENV=production" >> .env.production

      - name: Build for production
        run: npm run build

      - name: Deploy to Cloudflare (Production)
        run: npm run deploy
        env:
          CLOUDFLARE_API_TOKEN: ${{ secrets.CLOUDFLARE_API_TOKEN }}
          CLOUDFLARE_ACCOUNT_ID: ${{ secrets.CLOUDFLARE_ACCOUNT_ID }}

      - name: Deployment notification
        if: success()
        run: echo "üöÄ Production deployment completed successfully!"

      - name: Rollback notification
        if: failure()
        run: |
          echo "‚ùå Deployment failed! Manual intervention required."
          echo "Database migration was successful but deployment failed."
